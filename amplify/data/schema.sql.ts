/* eslint-disable */
/* THIS IS AN AUTOGENERATED FILE. DO NOT EDIT THIS FILE DIRECTLY. */
import { a } from "@aws-amplify/data-schema";
import { configure } from "@aws-amplify/data-schema/internals";
import { secret } from "@aws-amplify/backend";

export const schema = configure({
    database: {
        identifier: "ID9x4cFLLsMYdG90bQFcuwg",
        engine: "mysql",
        connectionUri: secret("SQL_CONNECTION_STRING"),
        vpcConfig: {
            vpcId: "vpc-053ec09dcd80fc6c5",
            securityGroupIds: [
                "sg-08a89a9a486c305fa"
            ],
            subnetAvailabilityZones: [
                {
                    subnetId: "subnet-0177b23099cfbc519",
                    availabilityZone: "us-east-1c"
                },
                {
                    subnetId: "subnet-0af729e9094596053",
                    availabilityZone: "us-east-1d"
                },
                {
                    subnetId: "subnet-0f0c23414f3313439",
                    availabilityZone: "us-east-1e"
                },
                {
                    subnetId: "subnet-036def8edcb2765f8",
                    availabilityZone: "us-east-1f"
                },
                {
                    subnetId: "subnet-0b2d65daf091cfdb0",
                    availabilityZone: "us-east-1a"
                },
                {
                    subnetId: "subnet-0ed71d8ccaf363df0",
                    availabilityZone: "us-east-1b"
                }
            ]
        }
    }
}).schema({
    "Token": a.model({
        RequestId: a.string().required(),
        TokenId: a.string().required(),
        Token: a.string().required()
    }).identifier([
        "TokenId"
    ]),
    "TokenRequest": a.model({
        RequestId: a.string().required(),
        count: a.integer().required(),
        ppid: a.string().required(),
        RequestTime: a.datetime().required()
    }).identifier([
        "RequestId"
    ])
});
